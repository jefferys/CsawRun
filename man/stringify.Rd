% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{stringify}
\alias{stringify}
\alias{stringify.character}
\alias{stringify.logical}
\alias{stringify.integer}
\alias{stringify.double}
\alias{stringify.complex}
\alias{stringify.raw}
\alias{stringify.list}
\title{Convert an R object to a string}
\usage{
stringify(x, nullSymbol = "NULL", ...)

\method{stringify}{character}(x, nameSep = "= ", elemSep = ", ",
  dropNames = FALSE, valueDelim = NULL, nameDelim = NULL,
  naSymbol = "NA", empty = "", ...)

\method{stringify}{logical}(x, logicalSymbols = c("TRUE", "FALSE"), ...)

\method{stringify}{integer}(x, prettyNum = TRUE, ...)

\method{stringify}{double}(x, prettyNum = TRUE, ...)

\method{stringify}{complex}(x, prettyNum = TRUE, ...)

\method{stringify}{raw}(x, ...)

\method{stringify}{list}(x, dropNames = FALSE, valueDelim = NULL,
  nullSymbol = "NULL", listSymbols = c("{", "}"),
  vectorSymbols = c("(", ")"), ...)
}
\arguments{
\item{x}{The object to stringify.}

\item{nullSymbol}{Character string to use in place of NULL values. By
default will be: "NULL"}

\item{...}{Additional options to be passed on to prettyNum(), or to
specific methods.}

\item{nameSep}{If an element has a name, this separates the name and value.
By default uses "= ", e.g. elements display as key= value, or just value,
if have no name}

\item{elemSep}{Separator between elements. by default this is ",". For
a less compact (one line per element) string representation, use \\n or
something similar.}

\item{dropNames}{By default, names are reported. If this is set TRUE, no names
will be used (and any name separator will be ignored).}

\item{valueDelim}{Delimiter to use for values. By default nothing is used.
If this is a single character value, it will be used at the start and end
of the value. If this is a vector of length 2, the 1st character will be
used at the start of every value and the 2nd at the end.}

\item{nameDelim}{Delimiter to use for names. By default nothing is used for
valid R names, backticks (`) are used for invalid r names, e.g. those
with spaced. If nameDelim is specified, all names will have the specified
delimiter(s), regardless of valdity. If this is a single character value,
it will be used at the start and end of the name. If this is a vector of
length 2, the 1st character will be used at the start of every name and
the 2nd at the end.}

\item{naSymbol}{Character string to use in place of missing values (NA). By
default will be: NA}

\item{empty}{String to use in place of an empty character value.
Default is nothing. Value delimiters will be applied to this replaced
value, if any are specified.}

\item{logicalSymbols}{Character vector of length 2 giving symbols to use
for TRUE and for FALSE (in that order). Default is c( "TRUE", "FALSE" ).}

\item{prettyNum}{Set FALSE to prevent numeric vectors from being
processed by prettyNum() when converting to strings. By default this is
TRUE and parameters for prettyNum specified as ... are passed through.}

\item{listSymbols}{Character vector of length 2 giving symbols to use
for opening and closing a list. Default is c( "{", "}" ). Needed to
identify nesting with lists of one list.}

\item{vectorSymbols}{Character vector of length 2 giving symbols to use
for opening and closing a vector with named elements or of length greater
than 1. Default is c( "(", ")" ). Cleaner notation if have named list
elements that are vectors with named elements. Not used for simple
vectors, only when a vector is an element, e.g, in a list.}
}
\value{
A single element character vector (string)
}
\description{
Generic to converts the specified R object to a string for printing,
preserving names. If a name is not a valid R name, it will be quoted with
backticks like: `a name`. Double and integer values are processed by
format(...) before reporting, parameters for format can be specified and
will be passed through. Other values are reported as is, so empty strings
and strings containing separators may lead to confusing output; choose your
separators to avoid problems. Lists are processed recursively, with each
level delimited by { and } by default. Within a list, elements that are
vectors are delimited by ( and ) by default, unless they are just a single,
unnamed value.
}
\examples{
x <- c( A="a", "B", empty="", "d")
stringify(x)
#> "A= a, B, empty= , d"
stringify(x, valueDelim="'")
#> "A= 'a', 'B', empty= '', 'd'"
stringify(x, empty="<>")
#> "A= a, B, empty= <>, d"
stringify(x, empty="<>", valueDelim=c("'"))
#> "A= 'a', 'B', empty= '<>', 'd'"

x <- c( A=TRUE, FALSE, NA, B=TRUE )
stringify( x )
#> "A= TRUE, FALSE, NA, B= TRUE"
stringify( x, logicalSymbols= c( "T", "F" ), naSymbol= "." )
#> "A= T, F, ., B= T"
stringify( x, logicalSymbols= c( "1", "0" ), naSymbol= "*", names=FALSE, elemSep="" )
#> "10*1"

}
